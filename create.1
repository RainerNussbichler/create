.\" Man page for create
.\" Copyright (C), 2021, Rainer Nussbichler
.\"
.\" You may distribute under the terms of the GNU General Public
.\" License as specified in the file COPYING that comes with the man
.\" distribution.
.\"
.\" Do March 18 17:48:52 CEST 2021  Rainer Nussbichler
.\"
.\"
.TH "create" "1" "18. March 2021" "Rainer Nußbichler" "documentation"
.SH "NAME  "
create
.SH "SYNOPSIS  "
\fBcreate\fR <parameter> [(arguments: ) \fIname1\fP \fIname2\fP ...]
.SH "BESCHREIBUNG  "
\fPcreate\fR erstellt andhand der Vrolagen aus dem "templates" Ordner im
Shellskriptverzeichnis cpp-, html-, sh-, css- , php- oder h-Dateien. 
Weiters kan man mit den richtigen Parmetern gleich Web, Qt oder C++ Projekte anlegen.
.SS \fIDer optionale Parameter Name:\fP

Beim erstellen eines CPP-Projektes:
  Der Projektordner wird mit "Name1" benannt.
  Die erste Klasse, die dazugehörige header- und source- Datei wird
  mit "Name2" benannt. Das Ziel der Makefile wird mit "Name1" benannt.
  Wenn es nur einen Namen gibt, wird "Name2" mit "Name1" ersetzt. Wenn
  keinen Namen gibt, wird "Name1" mit "unnamed" ersetzt.

Beim erstellen eines WEB-Projektes:
  Der Projektordner wird mit "Name1" benannt.
  Wenn es keinen Namen gibt, wird "Name1" mit "unnamed" ersetzt.

Beim erstellen eines QT-Projektes:
  Der Projektordner und die Binärdatei wird mit "Name1" benannt.
  Wenn es keinen Namen gibt, wird "Name1" mit "unnamed" ersetzt.

Beim erstellen eines oder mehrerer Dokumente:
  Das neue Dokument wird mit diesem Namen erzeugt.
  Wenn dieser Parameter fehlt heißt das Dokument unnnamed.
  Man kann mehrere Namen mit einem trennenden Leerzeichen angeben,
  dann werden auch so viele gleiche Dokumente mit den jeweiligen Namen
  erzeugt.
.SH Optionen
.TP
\fB\-sh\fR
erstellt ein ausführbares Bash-Dokument mit der Dateiendung ".sh"
.TP
\fB\-cpp\fR
erstellt ein C++-source-Dokument mit der Dateiendung ".cpp"
.TP
\fB\-h\fR
erstellt ein C++-header-Dokument mit der Dateiendung ".h"
.TP
\fB\-html\fR
erstellt ein HTML-Dokument mit der Dateiendung ".html"
.TP
\fB\-css\fR
erstellt ein CSS-Dokument mit der Dateiendung ".css"
.TP
\fB\-php\fR
erstellt ein PHP-Dokument mit der Dateiendung ".php"
.TP
\fB\-CPP\fR
erstellt ein C++-Projekt dessen Struktur wie folgt aussieht:

Name1
  |-src
  |   |-main.cpp
  |   |-Name2.cpp
  |
  |-headers
  |   |-Name2.h
  |
  |-Debug
  |   |-Makefile
.TP
\fB\-WEB\fR
erstellt ein Web-Projekt dessen Struktur wie folgt aussieht:

Name1
  |-index.html
  |
  |-html
  |
  |-css
  |   |-Name2.css
  |
  |-img
  |
  |-php

.TP
\fB\-QT\fR
erstellt ein Qt-Projekt dessen Struktur wie folgt aussieht:

Name1
  |-src
  |   |-main.cpp
  |   |-gui.cpp
  |
  |-headers
  |   |-gui.h
  |
  |-res
  |   |-exampla.png
  |   |-res.qrc
  |
  |-projectname.pro
.SH "Kompilieren und Starten "
.TP
\fB\-QT\fR
Kommando: cd projectname; qmake; make; ./projectname

Abhängigkeit: sudo apt-get install c++ make qt5-default
.TP
\fB\-CPP\fR
Kommando: cd projectname/debug; make; ../projectname

Abhängigkeit: sudo apt-get install c++ make
.SH "BEISPIELE  "
create CPP projectname classname

create css mainstyle loginstyle logoutstyle
.SH "FEHLER  "
I do not think so ;) Keine Fehler bekannt

Fehler bitte melden an: admin@eqod.eu
.SH "AUTOR  "
Rainer Nussbichler rainer.nussbichler@eqod.eu https://www.eqod.eu
